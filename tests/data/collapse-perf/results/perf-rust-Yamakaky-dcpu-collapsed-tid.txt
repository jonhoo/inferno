emulator-?/4152;[unknown];_dl_name_match_p 1
emulator-?/4152;[unknown];_dl_sysdep_start;_dl_init_paths 1
emulator-?/4152;[unknown];_dl_sysdep_start;dl_main;__strcasecmp 1
emulator-?/4152;[unknown];_dl_sysdep_start;dl_main;_dl_relocate_object 2
emulator-?/4152;[unknown];strcmp 1
emulator-?/4152;__GI_____strtoull_l_internal 1
emulator-?/4152;__GI___readlink 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;<u8 as core::clone::Clone>::clone 3
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;<usize as core::iter::range::Step>::add_one 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;core::iter::range::_<impl core::iter::iterator::Iterator for core::ops::Range<A>>::next;core::cmp::impls::_<impl core::cmp::PartialOrd for usize>::lt 2
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;core::ptr::write 2
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::set_len 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<collections::vec::Vec<T> as core::iter::traits::FromIterator<T>>::from_iter;<collections::vec::Vec<T>>::extend_desugared;<core::iter::Map<I, F> as core::iter::iterator::Iterator>::next;<core::str::Split<'a, P> as core::iter::iterator::Iterator>::next;<core::str::SplitInternal<'a, P>>::next;<core::str::pattern::CharSearcher<'a> as core::str::pattern::Searcher<'a>>::next_match;core::str::pattern::Searcher::next_match;<core::str::pattern::CharEqSearcher<'a, C> as core::str::pattern::Searcher<'a>>::next;<core::str::CharIndices<'a> as core::iter::iterator::Iterator>::next;<core::str::Chars<'a> as core::iter::iterator::Iterator>::next;core::str::next_code_point 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<collections::vec::Vec<T> as core::iter::traits::FromIterator<T>>::from_iter;<collections::vec::Vec<T>>::extend_desugared;<&'a mut I as core::iter::iterator::Iterator>::next;<<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next;<core::iter::Map<I, F> as core::iter::iterator::Iterator>::next;<core::option::Option<T>>::map;core::ops::impls::_<impl core::ops::FnOnce<A> for &'a mut F>::call_once;term::terminfo::parser::compiled::parse::_{{closure}};term::terminfo::parser::compiled::read_le_u16;<std::io::buffered::BufReader<R> as std::io::Read>::read;std::io::impls::_<impl std::io::Read for &'a [u8]>::read;collections::slice::_<impl [T]>::split_at;<[T] as core::slice::SliceExt>::split_at;core::slice::_<impl core::ops::Index<core::ops::RangeTo<usize>> for [T]>::index;core::slice::_<impl core::ops::Index<core::ops::Range<usize>> for [T]>::index;core::slice::from_raw_parts 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<collections::vec::Vec<T> as core::iter::traits::FromIterator<T>>::from_iter;<collections::vec::Vec<T>>::extend_desugared;<collections::vec::Vec<T> as core::ops::DerefMut>::deref_mut 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<collections::vec::Vec<T> as core::iter::traits::FromIterator<T>>::from_iter;<collections::vec::Vec<T>>::extend_desugared;collections::slice::_<impl [T]>::get_unchecked_mut;<[T] as core::slice::SliceExt>::get_unchecked_mut 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<&'a mut I as core::iter::iterator::Iterator>::next;<<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next;<core::iter::FilterMap<I, F> as core::iter::iterator::Iterator>::next;<&'a mut I as core::iter::iterator::Iterator>::next;core::iter::range::_<impl core::iter::iterator::Iterator for core::ops::Range<A>>::next;core::cmp::impls::_<impl core::cmp::PartialOrd for usize>::lt 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<&'a mut I as core::iter::iterator::Iterator>::next;<<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next;<core::iter::Map<I, F> as core::iter::iterator::Iterator>::next;<core::iter::Filter<I, P> as core::iter::iterator::Iterator>::next;<&'a mut I as core::iter::iterator::Iterator>::next;<core::iter::Enumerate<I> as core::iter::iterator::Iterator>::next;<core::option::Option<T>>::map 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<&'a mut I as core::iter::iterator::Iterator>::next;<<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next;<core::iter::Map<I, F> as core::iter::iterator::Iterator>::next;<core::option::Option<T>>::map;core::ops::impls::_<impl core::ops::FnOnce<A> for &'a mut F>::call_once;term::terminfo::parser::compiled::parse::_{{closure}};core::iter::iterator::Iterator::position 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<&'a mut I as core::iter::iterator::Iterator>::next;<<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next;<core::iter::Map<I, F> as core::iter::iterator::Iterator>::next;<core::option::Option<T>>::map;core::ops::impls::_<impl core::ops::FnOnce<A> for &'a mut F>::call_once;term::terminfo::parser::compiled::parse::_{{closure}};core::iter::iterator::Iterator::position;<core::iter::Enumerate<I> as core::iter::iterator::Iterator>::next;<&'a mut I as core::iter::iterator::Iterator>::next;<core::slice::Iter<'a, T> as core::iter::iterator::Iterator>::next;core::ptr::_<impl *const T>::offset 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<std::collections::hash::map::HashMap<K, V, S>>::insert;<std::collections::hash::map::HashMap<K, V, S>>::insert_hashed_nocheck;<std::collections::hash::map::VacantEntry<'a, K, V>>::insert;std::collections::hash::map::robin_hood;<std::collections::hash::table::FullBucket<K, V, M> as std::collections::hash::table::Put<K, V>>::borrow_table_mut 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<std::collections::hash::map::HashMap<K, V, S>>::insert;<std::collections::hash::map::HashMap<K, V, S>>::insert_hashed_nocheck;<std::collections::hash::map::VacantEntry<'a, K, V>>::insert;std::collections::hash::map::robin_hood;<std::collections::hash::table::FullBucket<K, V, M>>::displacement;<std::collections::hash::table::FullBucket<K, V, M> as core::ops::Deref>::deref;<&'a mut T as core::ops::Deref>::deref 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<std::collections::hash::map::HashMap<K, V, S>>::insert;<std::collections::hash::map::HashMap<K, V, S>>::insert_hashed_nocheck;std::collections::hash::map::search_hashed 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<std::collections::hash::map::HashMap<K, V, S>>::insert;<std::collections::hash::map::HashMap<K, V, S>>::reserve;<std::collections::hash::map::HashMap<K, V, S>>::resize;<std::collections::hash::map::HashMap<K, V, S>>::insert_hashed_ordered 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<std::collections::hash::map::HashMap<K, V, S>>::insert;<std::collections::hash::map::HashMap<K, V, S>>::reserve;<std::collections::hash::map::HashMap<K, V, S>>::resize;__memmove_sse2_unaligned_erms 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;std::io::Read::read_to_end;std::io::read_to_end;<collections::vec::Vec<T>>::truncate;<collections::vec::Vec<T> as core::ops::DerefMut>::deref_mut;core::ptr::_<impl *mut T>::is_null 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stderr;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;term::terminfo::searcher::get_dbpath_for_term;std::path::PathBuf::_push 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;<u8 as core::clone::Clone>::clone 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;core::iter::range::_<impl core::iter::iterator::Iterator for core::ops::Range<A>>::next 3
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;core::iter::range::_<impl core::iter::iterator::Iterator for core::ops::Range<A>>::next;core::cmp::impls::_<impl core::cmp::PartialOrd for usize>::lt 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;<std::io::buffered::BufReader<R>>::new;<std::io::buffered::BufReader<R>>::with_capacity;collections::vec::from_elem;<collections::vec::Vec<T>>::extend_with_element;core::iter::range::_<impl core::iter::iterator::Iterator for core::ops::Range<A>>::next;core::mem::swap 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<collections::vec::Vec<T> as core::iter::traits::FromIterator<T>>::from_iter;<collections::vec::Vec<T>>::extend_desugared;<&'a mut I as core::iter::iterator::Iterator>::next;<<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter::Adapter<Iter, E> as core::iter::iterator::Iterator>::next;<core::iter::Map<I, F> as core::iter::iterator::Iterator>::next;<core::option::Option<T>>::map;core::ops::impls::_<impl core::ops::FnOnce<A> for &'a mut F>::call_once;term::terminfo::parser::compiled::parse::_{{closure}};term::terminfo::parser::compiled::read_le_u16;core::slice::_<impl core::ops::IndexMut<core::ops::RangeFrom<usize>> for [T]>::index_mut 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<collections::vec::Vec<T> as core::iter::traits::FromIterator<T>>::from_iter;<collections::vec::Vec<T>>::extend_desugared;<collections::vec::Vec<T> as core::ops::DerefMut>::deref_mut 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<collections::vec::Vec<T> as core::iter::traits::FromIterator<T>>::from_iter;<collections::vec::Vec<T>>::extend_desugared;<collections::vec::Vec<T>>::set_len 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<std::collections::hash::map::HashMap<K, V, S>>::insert;<std::collections::hash::map::HashMap<K, V, S>>::insert_hashed_nocheck;std::collections::hash::map::search_hashed;<std::collections::hash::table::Bucket<K, V, M>>::new;<std::collections::hash::table::Bucket<K, V, M>>::at_index;<std::collections::hash::table::RawTable<K, V>>::first_bucket_raw;std::collections::hash::table::calculate_offsets;core::num::_<impl usize>::overflowing_add 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;core::iter::iterator::Iterator::collect;<core::result::Result<V, E> as core::iter::traits::FromIterator<core::result::Result<A, E>>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::FromIterator<(K, V)>>::from_iter;<std::collections::hash::map::HashMap<K, V, S> as core::iter::traits::Extend<(K, V)>>::extend;<std::collections::hash::map::HashMap<K, V, S>>::insert;<std::collections::hash::map::HashMap<K, V, S>>::make_hash;std::collections::hash::table::make_hash;<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish;<core::hash::sip::SipHasher13 as core::hash::Hasher>::finish;<core::hash::sip::Hasher<S> as core::hash::Hasher>::finish;<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds;core::num::_<impl u64>::wrapping_add 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;emulator::main_ret;simplelog::termlog::TermLogger::init;log::set_logger;log::set_logger_raw;log::set_logger::_{{closure}};simplelog::termlog::TermLogger::init::_{{closure}};simplelog::termlog::TermLogger::new;term::stdout;<term::terminfo::TerminfoTerminal<T>>::new;term::terminfo::TermInfo::from_env;term::terminfo::TermInfo::from_name;<core::result::Result<T, E>>::and_then;term::terminfo::TermInfo::from_name::_{{closure}};term::terminfo::TermInfo::from_path;term::terminfo::TermInfo::_from_path;term::terminfo::parser::compiled::parse;std::io::Read::read_to_end;std::io::read_to_end;<collections::vec::Vec<T>>::resize;<collections::vec::Vec<T>>::extend_with_element;core::ptr::_<impl *mut T>::offset 1
emulator-?/4152;__rust_maybe_catch_panic;emulator::main;simplelog::termlog::TermLogger::init;page_fault 1
emulator-?/4152;_dl_map_object;_dl_load_cache_lookup 2
emulator-?/4152;_dl_start_user;_dl_start 1
emulator-?/4152;_start 6
emulator-?/4152;_start;page_fault 1
emulator-?/4152;je_arena_ralloc_no_move 1
emulator-?/4152;je_arena_tcache_fill_small;page_fault 1
emulator-?/4152;je_tcache_boot 1
